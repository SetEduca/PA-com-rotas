<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cadastro de Creche</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">

    <style>
        /* =========================================
        1. RESET E ESTILOS GERAIS
        ========================================= */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body,
        html {
            height: 100%;
            font-family: 'Poppins', sans-serif;
            overflow: hidden; /* Evita scroll inicial em telas grandes */
            background-color: #FFFFFF;
        }

        /* =========================================
        2. LAYOUT PRINCIPAL (COLUNAS)
        ========================================= */
        .container {
            display: flex;
            width: 100vw;
            height: 100vh;
        }

        .left-column {
            flex-basis: 45%;
            background-color: #f0f0f0; /* Cor de fundo caso a imagem não carregue */
            background-image: url(/imagem/ca.png); /* Caminho da sua imagem */
            background-size: cover;
            background-position: center;
            display: flex; /* Mantido flex para futuras adições, mas welcome-card escondido */
            justify-content: center;
            align-items: center;
            padding: 2rem;
            position: relative;
        }

        .right-column {
            flex-basis: 55%;
            background-color: #FFFFFF;
            padding: 2.5rem 7rem; /* Ajuste o padding conforme necessário */
            display: flex;
            flex-direction: column;
            justify-content: center; /* Centraliza verticalmente */
            overflow-y: auto; /* Permite scroll se o conteúdo for maior */
            position: relative;
        }

        /* =========================================
        3. COMPONENTES DE CONTEÚDO
        ========================================= */
         /* Escondido pois não está sendo usado no HTML fornecido */
        .welcome-card {
            display: none;
            /* Estilos originais mantidos caso queira reativar */
            background-color: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            padding: 4rem 3rem;
            text-align: center;
            border-radius: 20px;
            max-width: 400px;
            position: relative;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .welcome-card h1 { font-family: 'Poppins', sans-serif; font-size: 3rem; font-weight: 600; color: #111; }
        .welcome-card p { font-family: 'Poppins', sans-serif; font-size: 1.1rem; color: #333; margin-top: 0.5rem; }


        .login-section {
            position: absolute;
            top: 2.5rem;
            right: 7rem;
            font-size: 1rem;
            color: #555;
        }

        .login-section a {
            font-weight: bold;
            color: #FFC72C; /* Cor amarela do tema */
            text-decoration: none;
        }
        .login-section a:hover {
            text-decoration: underline;
        }

        .main-content {
            display: flex;
            align-items: flex-start; /* Alinha foto e form no topo */
            gap: 2.5rem;
            width: 100%;
        }

        /* =========================================
        4. ESTRUTURA DO FORMULÁRIO
        ========================================= */
        .form-area {
            flex-grow: 1; /* Ocupa o espaço restante */
            width: 100%; /* Garante que ocupe a largura disponível */
        }

        .name-and-photo-group {
            display: flex;
            align-items: flex-end; /* Alinha base da foto com base do input */
            gap: 1.5rem;
            margin-bottom: 1.5rem; /* Espaço abaixo do grupo */
        }

        .name-and-photo-group .form-group {
             /* O form-group do nome ocupará o espaço restante */
             flex-grow: 1;
             margin-bottom: 0; /* Remove margem padrão do form-group */
        }


        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr; /* Duas colunas iguais */
            gap: 1.2rem 1.2rem; /* Espaçamento entre linhas e colunas */
            width: 100%;
            margin-top: 0; /* Sem margem superior extra */
        }

        .form-group {
            display: flex;
            flex-direction: column;
            /* A margem inferior será controlada pelo gap do grid ou .name-and-photo-group */
        }

        .full-width {
            grid-column: 1 / -1; /* Ocupa todas as colunas */
        }

        /* =========================================
        5. ELEMENTOS DO FORMULÁRIO (INPUTS, LABELS)
        ========================================= */
        .form-group label {
            font-size: 0.9rem;
            color: #333;
            margin-bottom: 0.4rem;
            font-weight: 500;
        }

        .form-group input {
            width: 100%;
            padding: 0.8rem 1rem;
            border: 1.5px solid #D4BBAA; /* Cor da borda */
            border-radius: 10px; /* Bordas arredondadas */
            background-color: #FFF4DF; /* Cor de fundo do input */
            font-size: 0.9rem;
            font-family: 'Poppins', sans-serif;
            color: #333;
            transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

        .form-group input::placeholder {
            color: #aaa;
        }

        .form-group input:focus {
            outline: none;
            border-color: #FFD972; /* Cor amarela no foco */
            box-shadow: 0 0 0 3px rgba(255, 217, 114, 0.5); /* Sombra suave no foco */
        }

        .form-group input:disabled {
            background-color: #f2eadd;
            cursor: not-allowed;
            /* Estilo para campo desabilitado (ex: busca CNPJ) */
        }

        .form-group input.error {
            border-color: #dc3545; /* Vermelho para erro */
            background-color: #fff5f5;
        }

        /* --- INÍCIO: CSS Corrigido para Ícone de Olho --- */
        .password-container {
            position: relative; /* Mantém como container relativo */
        }
        .password-toggle-icon {
            position: absolute;
             top: calc(0.4rem + 0.9rem + 0.8rem); /* Distância até o topo do input */
             /* Você pode precisar de um ajuste fino como: top: calc(0.4rem + 0.9rem + 0.8rem + 2px); */
             /* OU usar um valor fixo e ajustar: */
             /* top: 38px; */ /* Experimente valores entre 35px e 45px */

            right: 15px; /* Mantém distância da direita */
            transform: translateY(50%); /* Ajusta para alinhar melhor verticalmente (tentativa) */
            color: #aaa;
            cursor: pointer;
            font-size: 1rem;
            z-index: 2;
        }
        .password-toggle-icon:hover {
            color: #555;
        }
        /* Padding no input (mantém como estava) */
        .password-container input[type="password"],
        .password-container input[type="text"] {
             padding-right: 40px;
        }
        /* --- FIM CSS Corrigido --- */


        /* =========================================
        6. COMPONENTE DE UPLOAD DE FOTO
        ========================================= */
        .photo-upload-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.5rem;
            margin-top: 0; /* Reset margin */
            flex-shrink: 0; /* Não encolhe */
            width: 160px; /* Largura fixa */
            text-align: center;
            position: relative;
        }

        .photo-circle {
            width: 140px;
            height: 140px;
            background-color: #FFD972; /* Amarelo */
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden; /* Para a imagem não vazar */
        }

        .photo-circle:hover {
            transform: scale(1.05);
            background-color: #f0c355; /* Amarelo mais escuro */
        }

        .photo-circle .camera-icon {
            font-size: 4rem;
            color: white;
            transition: opacity 0.3s ease;
        }

        .photo-preview {
            width: 100%;
            height: 100%;
            object-fit: cover; /* Cobre o círculo sem distorcer */
            border-radius: 50%;
            display: none; /* Começa escondido */
        }

        .remove-photo {
            position: absolute;
            top: 5px;
            right: 5px;
            background: #dc3545; /* Vermelho */
            color: white;
            border: none;
            width: 28px;
            height: 28px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 16px;
            display: none; /* Começa escondido */
            align-items: center;
            justify-content: center;
            z-index: 10;
            transition: background-color 0.3s ease;
        }

        .remove-photo:hover {
            background-color: #c82333; /* Vermelho mais escuro */
        }

        .file-input {
            display: none; /* Input real fica escondido */
        }

        .photo-upload-container p {
            font-size: 0.8rem;
            color: #555;
            margin-top: 0;
        }

        /* Mensagem de sucesso do upload da foto */
        .success-message {
            background-color: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
            padding: 8px 12px;
            border-radius: 8px;
            margin-top: 0.5rem;
            font-size: 0.8rem;
            display: none; /* Começa escondida */
            text-align: center;
            width: 100%; /* Ocupa a largura do container da foto */
        }


        /* =========================================
        7. TERMOS E CONDIÇÕES
        ========================================= */
        .terms-container {
            margin: 1.5rem 0;
            display: flex;
            align-items: flex-start; /* Alinha checkbox com início do texto */
            gap: 0.75rem;
        }

        .terms-checkbox {
            width: 18px;
            height: 18px;
            margin: 0;
            margin-top: 2px; /* Pequeno ajuste vertical */
            cursor: pointer;
            flex-shrink: 0; /* Não encolhe */
        }

        .terms-text {
            font-size: 0.85rem;
            color: #555;
            line-height: 1.4;
        }

        .terms-text a {
            color: #007bff; /* Azul padrão para links */
            text-decoration: none;
        }

        .terms-text a:hover {
            text-decoration: underline;
        }

        /* =========================================
        8. BOTÕES DE AÇÃO
        ========================================= */
        .form-actions {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        .submit-btn,
        .cancel-btn {
            flex: 1; /* Ocupam espaço igual */
            padding: 0.9rem; /* Aumenta um pouco o padding */
            border-radius: 25px; /* Bordas bem arredondadas */
            font-family: 'Poppins', sans-serif;
            font-size: 0.95rem;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.1s ease;
            text-align: center;
            text-decoration: none;
            border: none;
        }
        .submit-btn:active,
        .cancel-btn:active {
            transform: scale(0.98); /* Efeito de clique */
        }

        .submit-btn {
            background-color: #FFD972; /* Amarelo */
            color: #333;
        }

        .submit-btn:hover {
            background-color: #f0c355; /* Amarelo mais escuro */
        }

         /* Estilo do botão desabilitado */
         .submit-btn:disabled {
            background-color: #e9ecef;
            color: #6c757d;
            cursor: not-allowed;
            opacity: 0.7;
        }
        .submit-btn:disabled:hover {
             background-color: #e9ecef; /* Mantém a cor no hover quando desabilitado */
        }


        .cancel-btn {
            background-color: #f0f0f0; /* Cinza claro */
            color: #555;
            border: 1px solid #ddd;
        }

        .cancel-btn:hover {
            background-color: #e0e0e0; /* Cinza um pouco mais escuro */
        }

        /* =========================================
        9. MENSAGENS DE FEEDBACK (ERRO GERAL, SENHA)
        ========================================= */
        /* Mensagem de erro geral (controlada pelo JS/EJS) */
        .error-message {
            background-color: #f8d7da;
            color: #721c24;
            padding: 1rem;
            border: 1px solid #f5c6cb;
            border-radius: 10px;
            margin-bottom: 1.5rem;
            font-size: 0.95rem;
            display: none; /* Começa escondida, JS/EJS controlam */
            align-items: center;
            gap: 0.5rem;
        }

        .error-message i {
            color: #dc3545; /* Ícone vermelho */
        }

        /* Mensagem de erro específica da senha (controlada pelo JS) */
        .password-error-message {
            color: #D8000C; /* Vermelho mais forte */
            font-size: 0.8rem;
            font-weight: 500;
            margin-top: 5px;
            height: 15px; /* Espaço reservado para evitar pulos */
        }

        /* Caixa de requisitos da senha */
        .password-requirements {
            background-color: #e7f3ff;
            border: 1px solid #bee5eb;
            border-radius: 8px;
            padding: 10px;
            margin-top: 5px;
            font-size: 0.75rem;
            color: #0c5460;
            display: none; /* JS controla a exibição */
        }

        .password-requirements ul {
            margin: 0;
            padding-left: 15px;
            list-style: none; /* Remove bolinhas padrão */
        }

        .password-requirements li {
            margin: 3px 0;
            position: relative;
            padding-left: 18px; /* Espaço para o ícone */
        }
         .password-requirements li::before {
            content: "\f00d"; /* Ícone X (Font Awesome) */
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            position: absolute;
            left: 0;
            top: 1px;
            color: #dc3545; /* Vermelho por padrão */
        }


        .password-requirements li.valid {
            color: #28a745; /* Verde para válido */
        }
         .password-requirements li.valid::before {
             content: "\f00c"; /* Ícone Check (Font Awesome) */
             color: #28a745; /* Verde */
         }

        .password-requirements li.invalid {
            color: #dc3545; /* Vermelho para inválido */
        }
        /* A cor do ícone padrão já é vermelha */


        /* Mensagem de sucesso do cadastro (se usada via EJS) */
        .success-cadastro {
            background-color: #d4edda;
            color: #155724;
            padding: 1rem;
            border: 1px solid #c3e6cb;
            border-radius: 10px;
            margin-bottom: 1.5rem;
            font-size: 0.95rem;
            display: none; /* Começa escondida */
            align-items: center;
            gap: 0.5rem;
            text-align: center;
        }

        /* =========================================
        10. ESTILOS PARA O OVERLAY DE SUCESSO
        ========================================= */
        .success-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6); /* Fundo escuro semi-transparente */
            z-index: 1000;
            display: none; /* Começa escondido */
            justify-content: center;
            align-items: center;
            backdrop-filter: blur(4px); /* Efeito de desfoque */
        }

        .success-box {
            background-color: #FFFFFF; /* Fundo branco */
            border: none;
            border-radius: 15px;
            padding: 2.5rem; /* Mais padding */
            text-align: center;
            max-width: 450px; /* Um pouco maior */
            width: 90%;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            animation: fadeInScale 0.4s ease-out; /* Animação */
        }
         @keyframes fadeInScale {
             from { opacity: 0; transform: scale(0.8); }
             to { opacity: 1; transform: scale(1); }
         }


        .success-box h2 {
            color: #155724; /* Verde escuro */
            font-size: 1.8rem; /* Maior */
            margin-bottom: 1rem;
            font-weight: 600;
        }
         .success-box h2 i {
             color: #28a745; /* Verde brilhante */
             margin-right: 10px;
             font-size: 2rem; /* Ícone maior */
         }


        .success-box p {
            color: #333; /* Cinza escuro */
            margin-bottom: 2rem; /* Mais espaço */
            font-size: 1rem;
            line-height: 1.5;
        }

        .success-box .login-btn {
            background-color: #28a745; /* Verde */
            color: white;
            padding: 0.9rem 2.5rem; /* Botão maior */
            border: none;
            border-radius: 25px;
            font-size: 1rem; /* Fonte maior */
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.1s ease;
            text-decoration: none;
            display: inline-block;
        }

        .success-box .login-btn:hover {
            background-color: #218838; /* Verde mais escuro */
        }
         .success-box .login-btn:active {
            transform: scale(0.98);
         }


        /* =========================================
        11. MEDIA QUERIES (RESPONSIVIDADE)
        ========================================= */
        @media (max-width: 1024px) {
             .right-column {
                 padding: 2rem 4rem; /* Reduz padding em telas médias */
             }
             .login-section {
                 right: 4rem;
             }
        }


        @media (max-width: 850px) {
            body, html {
                overflow-y: auto; /* Permite scroll em telas menores */
                height: auto;
            }
            .container {
                flex-direction: column; /* Colunas empilhadas */
                height: auto;
            }
            .left-column {
                display: block; /* Garante que a imagem apareça */
                flex-basis: auto; /* Altura automática baseada no conteúdo (ou fixa) */
                height: 300px; /* Altura fixa para a imagem no topo */
                width: 100%;
            }
            .welcome-card {
                display: none; /* Mantém escondido */
            }
            .right-column {
                flex-basis: 100%; /* Ocupa toda a largura */
                padding: 2rem 1.5rem; /* Padding menor para mobile */
                justify-content: flex-start; /* Alinha conteúdo no topo */
                overflow-y: visible; /* Remove scroll interno */
                position: static; /* Remove posicionamento absoluto */
            }
            .login-section {
                position: static; /* Posição normal */
                text-align: center;
                margin-bottom: 2rem; /* Espaço abaixo */
            }
            .main-content {
                flex-direction: column; /* Conteúdo empilhado */
                align-items: center; /* Centraliza foto */
            }
             .name-and-photo-group {
                 flex-direction: column; /* Empilha foto e nome */
                 align-items: center; /* Centraliza */
                 gap: 1rem;
                 margin-bottom: 2rem;
             }
             .name-and-photo-group .form-group {
                 width: 100%; /* Nome ocupa largura total */
             }
            .photo-upload-container {
                order: -1; /* Move a foto para cima do nome */
                margin-top: 0;
                padding-top: 0;
                margin-bottom: 0;
            }
            .form-area {
                width: 100%;
                /* order já é 2 por padrão */
            }
            .form-grid {
                grid-template-columns: 1fr; /* Uma coluna só */
                gap: 1.1rem; /* Espaçamento entre linhas */
            }
        }
         @media (max-width: 480px) {
              .right-column {
                  padding: 1.5rem 1rem; /* Ainda menos padding */
              }
               .form-actions {
                  flex-direction: column; /* Empilha botões */
              }
         }

    </style>
</head>
<body>

    <div class="container">
        <div class="left-column">
            </div>

        <div class="right-column">
            <div class="login-section">
                <span>Já é cadastrado? <a href="/login">Login</a></span>
            </div>

            <div class="main-content">
               <form id="cadastro-form" class="form-area" method="POST" action="/cadastro" enctype="multipart/form-data">

                    <% if (typeof error !== 'undefined' && error) { %>
                        <div id="error-message-server" class="error-message" style="display: flex; margin-bottom: 1.5rem;">
                            <i class="fas fa-exclamation-triangle"></i>
                            <span id="error-text-server"><%= error %></span>
                        </div>
                    <% } %>
                    <% if (typeof success !== 'undefined' && success) { %>
                         <div id="success-message-server" class="success-cadastro" style="display: flex; margin-bottom: 1.5rem;">
                              <i class="fas fa-check-circle"></i>
                              <span><%= success %></span>
                         </div>
                         <script>
                              setTimeout(() => {
                                   const successDiv = document.getElementById('success-message-server');
                                   if(successDiv) successDiv.remove();
                              }, 5000);
                         </script>
                    <% } %>
                    <div id="error-message" style="display: none;" class="error-message">
                         <i class="fas fa-exclamation-triangle"></i>
                         <span id="error-text"></span>
                    </div>

                    <div class="name-and-photo-group">
                         <div class="photo-upload-container">
                              <div class="photo-circle" id="photoCircle">
                                   <i class="fas fa-camera camera-icon" id="cameraIcon"></i>
                                   <img id="photoPreview" class="photo-preview" alt="Preview da foto">
                                   <button type="button" class="remove-photo" id="removePhoto">&times;</button>
                              </div>
                              <input type="file" id="fileInput" name="foto_creche" class="file-input" accept="image/*">
                              <p>Adicione uma foto</p>
                              <div class="success-message" id="successMessage">
                                   Foto adicionada com sucesso!
                              </div>
                         </div>
                         <div class="form-group">
                              <label for="nome_creche">Nome da Creche</label>
                              <input type="text" id="nome_creche" name="nome_creche" placeholder="Ex: Saber de luz" required>
                         </div>
                    </div>

                    <div class="form-grid">
                         <div class="form-group">
                              <label for="cnpj">CNPJ/CPF</label>
                              <input type="text" id="cnpj" name="cnpj" placeholder="Digite o CNPJ (buscará nome) ou CPF" required>
                         </div>
                         <div class="form-group">
                              <label for="telefone">Telefone</label>
                              <input type="tel" id="telefone" name="telefone" placeholder="Ex: (71) 98888-8888" required>
                         </div>
                         <div class="form-group">
                              <label for="cep">CEP</label>
                              <input type="text" id="cep" name="cep" placeholder="Ex: 40140-650 (buscará endereço)" required>
                         </div>
                         <div class="form-group">
                              <label for="rua">Rua</label>
                              <input type="text" id="rua" name="rua" placeholder="Ex: Rua das Flores" required>
                         </div>
                         <div class="form-group">
                              <label for="bairro">Bairro</label>
                              <input type="text" id="bairro" name="bairro" placeholder="Ex: Ipitanga" required>
                         </div>
                         <div class="form-group">
                              <label for="cidade">Cidade</label>
                              <input type="text" id="cidade" name="cidade" placeholder="Ex: Salvador" required>
                         </div>
                         <div class="form-group full-width">
                              <label for="email">E-mail</label>
                              <input type="email" id="email" name="email" placeholder="Ex: saberdaluz@gmail.com" required>
                         </div>

                         <div class="form-group password-container">
                              <label for="senha">Senha</label>
                              <input type="password" id="senha" name="senha" placeholder="Crie a sua senha" required>
                              <i class="fas fa-eye password-toggle-icon" id="toggleSenha"></i>
                              <div class="password-requirements" id="password-requirements">
                                   <strong>Sua senha deve ter:</strong>
                                   <ul>
                                        <li id="req-length" class="invalid">Pelo menos 6 caracteres</li>
                                        <li id="req-lowercase" class="invalid">Pelo menos 1 letra minúscula</li>
                                        <li id="req-uppercase" class="invalid">Pelo menos 1 letra MAIÚSCULA</li>
                                        <li id="req-number" class="invalid">Pelo menos 1 número</li>
                                   </ul>
                              </div>
                         </div>

                         <div class="form-group password-container">
                              <label for="confirmar_senha">Confirme a senha</label>
                              <input type="password" id="confirmar_senha" name="confirmar_senha" placeholder="Confirme a sua senha" required>
                              <i class="fas fa-eye password-toggle-icon" id="toggleConfirmarSenha"></i>
                              <div id="password-error-message" class="password-error-message"></div>
                         </div>
                    </div> <div class="terms-container">
                         <input type="checkbox" id="terms" name="terms" class="terms-checkbox" required>
                         <label for="terms" class="terms-text">
                              Eu concordo com os <a href="#" target="_blank">Termos de Serviço do Seteeduca</a>
                         </label>
                    </div>

                    <div class="form-actions">
                         <button type="button" class="cancel-btn" onclick="cancelarCadastro()">Cancelar</button>
                         <button type="submit" class="submit-btn" id="cadastrar-btn">Cadastrar</button>
                    </div>
               </form>
            </div>
        </div>
    </div>

    <div id="success-overlay" class="success-overlay">
        <div class="success-box">
             <h2><i class="fas fa-check-circle"></i>Cadastrado com sucesso!</h2>
             <p>Sua creche foi cadastrada. Você será redirecionado para a página de login.</p>
             <a href="/login" class="login-btn">Ir para Login</a> </div>
    </div>

    <script>
        function cancelarCadastro() {
            if (confirm("Deseja cancelar o cadastro e limpar todos os dados?")) {
                document.getElementById('cadastro-form').reset();
                // Resetar preview da foto
                const photoPreview = document.getElementById('photoPreview');
                const cameraIcon = document.getElementById('cameraIcon');
                const removePhoto = document.getElementById('removePhoto');
                const successMessage = document.getElementById('successMessage');
                photoPreview.style.display = 'none';
                photoPreview.src = ''; // Limpa a imagem
                cameraIcon.style.display = 'block';
                removePhoto.style.display = 'none';
                successMessage.style.display = 'none';
                document.getElementById('fileInput').value = ''; // Limpa seleção de arquivo
                // Limpar mensagens de erro/sucesso
                document.getElementById('error-message').style.display = 'none';
                document.getElementById('error-text').textContent = '';
                document.getElementById('password-error-message').textContent = '';
                document.getElementById('password-requirements').style.display = 'none';
                // Remove mensagens do servidor se existirem
                document.getElementById('error-message-server')?.remove();
                document.getElementById('success-message-server')?.remove();
                // Resetar validação visual dos requisitos de senha
                ['req-length', 'req-lowercase', 'req-uppercase', 'req-number'].forEach(id => {
                    const el = document.getElementById(id);
                    if (el) el.className = 'invalid';
                });
                // Remover classe de erro dos inputs
                document.querySelectorAll('.form-group input.error').forEach(input => input.classList.remove('error'));
                // Resetar ícones de olho
                document.querySelectorAll('.password-toggle-icon').forEach(icon => {
                     icon.classList.remove('fa-eye-slash');
                     icon.classList.add('fa-eye');
                });
                 // Garantir que inputs de senha voltem a ser type="password"
                 document.getElementById('senha').type = 'password';
                 document.getElementById('confirmar_senha').type = 'password';
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const photoCircle = document.getElementById('photoCircle');
            const fileInput = document.getElementById('fileInput');
            const photoPreview = document.getElementById('photoPreview');
            const cameraIcon = document.getElementById('cameraIcon');
            const removePhoto = document.getElementById('removePhoto');
            const successMessage = document.getElementById('successMessage'); // Mensagem SUCESSO da FOTO
            const form = document.getElementById('cadastro-form');
            const senhaInput = document.getElementById('senha');
            const confirmarSenhaInput = document.getElementById('confirmar_senha');
            const errorMessageDiv = document.getElementById('password-error-message'); // Erro de confirmação
            const cadastrarBtn = document.getElementById('cadastrar-btn');
            const successOverlay = document.getElementById('success-overlay'); // Overlay GERAL de sucesso
            const errorMessage = document.getElementById('error-message'); // Div GERAL de erro (JS)
            const errorText = document.getElementById('error-text'); // Texto da div GERAL de erro (JS)
            const passwordRequirements = document.getElementById('password-requirements');

            // Seleciona os ícones de olho
            const toggleSenhaIcon = document.getElementById('toggleSenha');
            const toggleConfirmarSenhaIcon = document.getElementById('toggleConfirmarSenha');

            // ========== VALIDAÇÃO DE SENHA EM TEMPO REAL ==========
            senhaInput.addEventListener('focus', function() {
                passwordRequirements.style.display = 'block';
                 validatePassword(this.value);
            });
             senhaInput.addEventListener('blur', function() {
                 if (this.value === '') {
                     passwordRequirements.style.display = 'none';
                 }
             });
            function validatePassword(password) {
                const requirements = { length: password.length >= 6, lowercase: /[a-z]/.test(password), uppercase: /[A-Z]/.test(password), number: /\d/.test(password) };
                document.getElementById('req-length').className = requirements.length ? 'valid' : 'invalid'; document.getElementById('req-lowercase').className = requirements.lowercase ? 'valid' : 'invalid'; document.getElementById('req-uppercase').className = requirements.uppercase ? 'valid' : 'invalid'; document.getElementById('req-number').className = requirements.number ? 'valid' : 'invalid';
                return requirements.length && requirements.lowercase && requirements.uppercase && requirements.number;
            }
            senhaInput.addEventListener('input', function() {
                const password = this.value; validatePassword(password);
                 if (errorMessageDiv.textContent && (password === confirmarSenhaInput.value || confirmarSenhaInput.value === '')) { errorMessageDiv.textContent = ''; confirmarSenhaInput.classList.remove('error'); }
            });
            confirmarSenhaInput.addEventListener('input', function() {
                const senha = senhaInput.value; const confirmarSenha = this.value;
                if (confirmarSenha && senha !== confirmarSenha) { errorMessageDiv.textContent = 'As senhas não coincidem'; this.classList.add('error'); } else { errorMessageDiv.textContent = ''; this.classList.remove('error'); }
            });

            // ========== FUNCIONALIDADE DE UPLOAD DE FOTO ==========
            photoCircle.addEventListener('click', function(e) { if (e.target === removePhoto) return; fileInput.click(); });
            fileInput.addEventListener('change', function(event) { const file = event.target.files[0]; if (file) { if (!file.type.startsWith('image/')) { alert('Apenas imagens!'); fileInput.value = ''; return; } if (file.size > 5 * 1024 * 1024) { alert('Máx 5MB!'); fileInput.value = ''; return; } const reader = new FileReader(); reader.onload = function(e) { photoPreview.src = e.target.result; photoPreview.style.display = 'block'; cameraIcon.style.display = 'none'; removePhoto.style.display = 'flex'; successMessage.style.display = 'block'; setTimeout(() => { successMessage.style.display = 'none'; }, 3000); }; reader.readAsDataURL(file); } });
            removePhoto.addEventListener('click', function(event) { event.stopPropagation(); photoPreview.style.display = 'none'; photoPreview.src = ''; cameraIcon.style.display = 'block'; removePhoto.style.display = 'none'; fileInput.value = ''; successMessage.style.display = 'none'; });
            photoCircle.addEventListener('dragover', (e) => { e.preventDefault(); photoCircle.style.backgroundColor = '#f0c355'; }); photoCircle.addEventListener('dragleave', (e) => { e.preventDefault(); photoCircle.style.backgroundColor = '#FFD972'; });
            photoCircle.addEventListener('drop', (e) => { e.preventDefault(); photoCircle.style.backgroundColor = '#FFD972'; const files = e.dataTransfer.files; if (files.length > 0) { if (files[0].type.startsWith('image/')) { fileInput.files = files; fileInput.dispatchEvent(new Event('change')); } else { alert('Apenas imagens!'); } } });

            // ========== MÁSCARAS PARA OS CAMPOS ==========
            document.getElementById('cnpj')?.addEventListener('input', function(e) { let value = e.target.value.replace(/\D/g, ''); if (value.length <= 11) { value = value.replace(/(\d{3})(\d)/, '$1.$2').replace(/(\d{3})(\d)/, '$1.$2').replace(/(\d{3})(\d{1,2})$/, '$1-$2'); } else { value = value.substring(0, 14).replace(/^(\d{2})(\d)/, '$1.$2').replace(/^(\d{2})\.(\d{3})(\d)/, '$1.$2.$3').replace(/\.(\d{3})(\d)/, '.$1/$2').replace(/(\d{4})(\d)/, '$1-$2'); } e.target.value = value; });
            document.getElementById('telefone')?.addEventListener('input', function(e) { let value = e.target.value.replace(/\D/g, '').substring(0, 11); if (value.length <= 10) { value = value.replace(/^(\d{2})(\d)/, '($1) $2').replace(/(\d{4})(\d)/, '$1-$2'); } else { value = value.replace(/^(\d{2})(\d)/, '($1) $2').replace(/(\d{5})(\d)/, '$1-$2'); } e.target.value = value; });
            document.getElementById('cep')?.addEventListener('input', function(e) { let value = e.target.value.replace(/\D/g, '').substring(0, 8); value = value.replace(/^(\d{5})(\d)/, '$1-$2'); e.target.value = value; });

            // ========== BUSCA AUTOMÁTICA DE CNPJ ==========
             document.getElementById('cnpj')?.addEventListener('blur', async function() { const cnpj = this.value.replace(/\D/g, ''); const nomeCrecheInput = document.getElementById('nome_creche'); if (cnpj.length === 14) { const originalValue = nomeCrecheInput.value; nomeCrecheInput.value = 'Buscando Razão Social...'; nomeCrecheInput.disabled = true; try { const response = await fetch(`https://brasilapi.com.br/api/cnpj/v1/${cnpj}`); if (response.ok) { const data = await response.json(); nomeCrecheInput.value = data.razao_social || originalValue; } else { console.warn('CNPJ não encontrado/API falhou.'); nomeCrecheInput.value = originalValue; } } catch (error) { console.error('Erro ao buscar CNPJ:', error); alert('Não foi possível buscar os dados do CNPJ.'); nomeCrecheInput.value = originalValue; } finally { nomeCrecheInput.disabled = false; } } });

            // ========== BUSCA AUTOMÁTICA DE CEP ==========
            document.getElementById('cep')?.addEventListener('blur', function() { const cep = this.value.replace(/\D/g, ''); if (cep.length === 8) { this.style.cursor = 'wait'; fetch(`https://viacep.com.br/ws/${cep}/json/`).then(response => response.json()).then(data => { this.style.cursor = 'default'; if (!data.erro) { document.getElementById('rua').value = data.logradouro || ''; document.getElementById('bairro').value = data.bairro || ''; document.getElementById('cidade').value = data.localidade || ''; document.getElementById('rua').focus(); } else { alert('CEP não encontrado.'); } }).catch(error => { this.style.cursor = 'default'; console.error('Erro ao buscar CEP:', error); alert('Não foi possível consultar o CEP.'); }); } });

            // === Lógica Adicionada para Mostrar/Esconder Senha ===
            function togglePasswordVisibility(inputElement, iconElement) {
                const type = inputElement.getAttribute('type') === 'password' ? 'text' : 'password';
                inputElement.setAttribute('type', type);
                // Alterna o ícone
                iconElement.classList.toggle('fa-eye');
                iconElement.classList.toggle('fa-eye-slash');
            }
            // Adiciona evento de clique aos ícones (se eles existirem)
            toggleSenhaIcon?.addEventListener('click', function () {
                togglePasswordVisibility(senhaInput, this);
            });
            toggleConfirmarSenhaIcon?.addEventListener('click', function () {
                togglePasswordVisibility(confirmarSenhaInput, this);
            });
            // === FIM: Lógica mostrar/esconder senha ===

            // ========== VALIDAÇÃO E SUBMIT DO FORMULÁRIO (FETCH com FormData) ==========
            form.addEventListener('submit', async (event) => {
                event.preventDefault(); // Impede envio padrão
                // --- Limpeza ---
                errorMessageDiv.textContent = ''; errorMessage.style.display = 'none'; successOverlay.style.display = 'none'; document.getElementById('error-message-server')?.remove(); document.getElementById('success-message-server')?.remove();
                // --- Validações ---
                const senha = senhaInput.value; const confirmarSenha = confirmarSenhaInput.value; if (senha !== confirmarSenha) { errorMessageDiv.textContent = 'As senhas não coincidem.'; confirmarSenhaInput.classList.add('error'); confirmarSenhaInput.focus(); return; } if (!validatePassword(senha)) { errorText.textContent = 'A senha não atende aos requisitos.'; errorMessage.style.display = 'flex'; senhaInput.focus(); return; } const termsCheckbox = document.getElementById('terms'); if (!termsCheckbox.checked) { errorText.textContent = 'Aceite os Termos.'; errorMessage.style.display = 'flex'; termsCheckbox.focus(); termsCheckbox.scrollIntoView({ behavior: 'smooth', block: 'center' }); return; }
                // --- Envio ---
                cadastrarBtn.disabled = true; cadastrarBtn.textContent = 'Cadastrando...'; cadastrarBtn.style.opacity = '0.7'; const formData = new FormData(form);
                try {
                    const response = await fetch('/cadastro', { method: 'POST', body: formData }); const resultado = await response.json();
                    if (response.ok && resultado.success) { console.log('✅ Cadastro OK!'); successOverlay.style.display = 'flex'; errorMessage.style.display = 'none'; setTimeout(() => { window.location.href = '/login?cadastro=sucesso'; }, 3000); } else { console.error('❌ Erro Backend:', resultado.message); errorText.textContent = resultado.message || 'Erro desconhecido.'; errorMessage.style.display = 'flex'; window.scrollTo({ top: 0, behavior: 'smooth' }); }
                } catch (networkError) { console.error('Erro Rede/JSON:', networkError); if (networkError instanceof SyntaxError) { errorText.textContent = 'Erro inesperado no servidor.'; } else { errorText.textContent = 'Erro de conexão.'; } errorMessage.style.display = 'flex'; window.scrollTo({ top: 0, behavior: 'smooth' });
                } finally { if (successOverlay.style.display !== 'flex') { cadastrarBtn.disabled = false; cadastrarBtn.textContent = 'Cadastrar'; cadastrarBtn.style.opacity = '1'; } }
            });

        }); // Fim do DOMContentLoaded
    </script>

</body>
</html>