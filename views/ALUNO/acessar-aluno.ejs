<!DOCTYPE html>
<html lang="pt-BR">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Sete Educa - Crianças Cadastradas</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
* { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
body { background-color: #e8e8e8; min-height: 100vh; display: flex; }

.sidebar {
width: 280px;
background: linear-gradient(180deg, #FFF4DF 0%, #f8f0e3 100%);
display: flex;
flex-direction: column;
justify-content: space-between;
box-shadow: 2px 0 15px rgba(0, 0, 0, 0.1);
min-height: 100vh;
flex-shrink: 0;
}

.logo {
padding: 0px 40px;
text-align: center;
margin-bottom: 25px;
margin-top: 30px;
}

.logo img {
max-width: 100%;
height: auto;
}

.menu {
flex: 1;
padding: 20px 18px;
overflow-y: auto;
}

.menu-item {
padding: 30px 20px;
margin-bottom: 6px;
border-radius: 6px;
cursor: pointer;
transition: all 0.3s ease;
position: relative;
display: flex;
align-items: center;
font-weight: 500;
overflow: visible;
color: black;
text-decoration: none;
}

.menu-item i {
margin-right: 15px;
font-size: 18px;
width: 24px;
text-align: center;
z-index: 2;
}

.menu-item span {
z-index: 2;
font-size: 15px;
}

.menu-item:hover {
background-color: #6c757d21;
}

.menu-item::after {
padding: 0 10px;
content: '';
position: absolute;
bottom: -3px;
left: 20px;
height: 2px;
width: 0px;
transition: width 0.3s ease;
border-radius: 1px;
}

.menu-item:hover::after,
.menu-item.active::after {
width: calc(100% - 40px);
}

.menu-item:nth-child(1)::after { background-color: #F4BF27; }
.menu-item:nth-child(2)::after { background-color: #306bc2; }
.menu-item:nth-child(3)::after { background-color: #9747FF; }
.menu-item:nth-child(4)::after { background-color: #F88C12; }
.menu-item:nth-child(5)::after { background-color: #D22A2A; }
.menu-item:nth-child(6)::after { background-color: #59C631; }

.menu-item.active {
background-color: rgba(128, 128, 128, 0.356);
color: #333;
font-weight: 600;
}

.menu-item.active::before {
content: '';
position: absolute;
right: 15px;
top: 50%;
transform: translateY(-50%);
width: 8px;
height: 8px;
border-radius: 50%;
background-color: #333;
z-index: 2;
}

.seteeduca {
color: #333;
text-align: center;
margin-bottom: 10px;
}

.sidebar-footer {
padding: 20px 18px;
border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.logout-button {
padding: 16px 20px;
border-radius: 8px;
cursor: pointer;
transition: all 0.3s ease;
display: flex;
align-items: center;
font-weight: 500;
color: #333;
width: 100%;
border: none;
background: transparent;
}

.logout-button i {
margin-right: 15px;
font-size: 18px;
width: 24px;
text-align: center;
}

.logout-button:hover {
background-color: rgba(210, 42, 42, 0.1);
color: #c01e26;
font-weight: 600;
}

.main-content {
flex: 1;
min-height: 100vh;
display: flex;
flex-direction: column;
}

.header {
background: #306bc2;
height: 80px;
display: flex;
align-items: center;
justify-content: space-between;
padding: 0 30px;
color: white;
width: 100%;
}

.header-title {
display: flex;
align-items: center;
position: relative;
top: 0.7vh;
gap: 10px;
font-size: 1.5rem;
color: rgb(255, 255, 255);
font-family: 'Kodchasan', sans-serif;
}

.header-title i {
margin-right: 15px;
font-size: 28px;
}

.content-area {
padding: 30px;
background: #fcf8f2;
flex: 1;
width: 100%;
}

.search-section {
display: flex;
align-items: center;
justify-content: space-between;
margin-bottom: 30px;
}

.search-container {
position: relative;
width: 400px;
}

.search-input {
width: 100%;
height: 50px;
background: white;
border: 2px solid #ddd;
border-radius: 25px;
padding: 0 20px 0 50px;
font-size: 16px;
color: #666;
outline: none;
}

.search-input:focus {
border-color: #709ee4;
box-shadow: 0 0 0 3px rgba(57, 128, 196, 0.1);
}

.search-icon {
position: absolute;
left: 18px;
top: 50%;
transform: translateY(-50%);
color: #999;
font-size: 18px;
}

.new-button {
display: flex;
flex-direction: column;
align-items: center;
gap: 8px;
cursor: pointer;
transition: transform 0.2s ease;
}

.new-button:hover {
transform: translateY(-2px);
}

.new-button-circle {
width: 45px;
height: 45px;
background: #306bc2;
border-radius: 50%;
display: flex;
align-items: center;
justify-content: center;
color: white;
font-size: 28px;
font-weight: 200;
position: relative;
transition: background-color 0.3s ease;
}

.new-button:hover .new-button-circle {
background: #4f9be2;
}

.new-button-circle::before {
content: '+';
position: absolute;
top: 50%;
left: 50%;
transform: translate(-50%, -50%);
font-size: 28px;
}

.new-text {
font-size: 14px;
color: #666;
font-weight: 500;
text-align: center;
}

.stats-info {
text-align: right;
color: #333;
font-size: 18px;
font-weight: 600;
}

.table-container {
background: white;
border-radius: 12px;
border-top: 5px solid #306bc2;
box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
overflow: hidden;
}

.table {
width: 100%;
border-collapse: collapse;
}

.table-header {
background: #f8f9fa;
color: #666;
font-weight: 600;
font-size: 14px;
text-transform: uppercase;
}

.table th, .table td {
padding: 20px;
text-align: center;
border-bottom: 1px solid #eee;
}

.avatar-cell {
display: flex;
align-items: center;
justify-content: center;
}

.student-avatar {
width: 50px;
height: 50px;
border-radius: 50%;
background: linear-gradient(135deg, #306bc2, #4f9be2);
display: flex;
align-items: center;
justify-content: center;
color: white;
font-weight: 600;
font-size: 18px;
}

.operations {
display: flex;
justify-content: center;
align-items: center;
gap: 8px;
min-width: 200px;
}

.btn-action {
display: inline-flex;
align-items: center;
justify-content: center;
gap: 6px;
padding: 10px 14px;
border: none;
border-radius: 8px;
cursor: pointer;
font-size: 13px;
font-weight: 600;
text-decoration: none;
transition: all 0.3s ease;
white-space: nowrap;
min-width: 0;
flex: 0 0 auto;
}

.btn-action i {
font-size: 14px;
}

.btn-view {
background: #e8f5e8;
color: #2e7d32;
border: 2px solid #c8e6c9;
}

.btn-view:hover {
background: #c8e6c9;
transform: translateY(-2px);
box-shadow: 0 4px 8px rgba(46, 125, 50, 0.2);
}

.btn-edit {
background: #e3f2fd;
color: #306bc2;
border: 2px solid #bbdefb;
}

.btn-edit:hover {
background: #bbdefb;
transform: translateY(-2px);
box-shadow: 0 4px 8px rgba(25, 118, 210, 0.2);
}

.btn-delete {
background: #fce4ec;
color: #c01e26;
border: 2px solid #f8bbd9;
}

.btn-delete:hover {
background: #f8bbd9;
transform: translateY(-2px);
box-shadow: 0 4px 8px rgba(194, 24, 91, 0.2);
}

.status-badge {
display: inline-block;
padding: 6px 12px;
border-radius: 20px;
font-size: 12px;
font-weight: 700;
text-transform: uppercase;
letter-spacing: 0.5px;
}

.status-ativo {
background: linear-gradient(135deg, #d4edda, #c3e6cb);
color: #155724;
border: 1px solid #c3e6cb;
}

.status-pendente {
background: linear-gradient(135deg, #fff3cd, #ffeaa7);
color: #856404;
border: 1px solid #ffeaa7;
}

.status-inativo {
background: linear-gradient(135deg, #f8d7da, #f5c6cb);
color: #721c24;
border: 1px solid #f5c6cb;
}

.modal {
display: none;
position: fixed;
top: 0;
left: 0;
right: 0;
bottom: 0;
background-color: rgba(0,0,0,0.5);
justify-content: center;
align-items: center;
z-index: 9999;
backdrop-filter: blur(3px);
}

.modal-content {
background: white;
border-radius: 12px;
padding: 0;
max-width: 800px;
width: 90%;
max-height: 80vh;
overflow: hidden;
box-shadow: 0 10px 25px rgba(0,0,0,0.2);
animation: modalFadeIn 0.3s ease;
}

.modal-header {
background: #306bc2;
color: white;
padding: 20px 30px;
display: flex;
justify-content: space-between;
align-items: center;
}

.modal-title {
font-size: 1.4rem;
font-weight: 600;
display: flex;
align-items: center;
gap: 10px;
}

.modal-close {
background: none;
border: none;
color: white;
font-size: 24px;
cursor: pointer;
padding: 5px;
transition: opacity 0.2s ease;
}

.modal-close:hover {
opacity: 0.7;
}

.modal-body {
padding: 30px;
max-height: 60vh;
overflow-y: auto;
}

.info-grid {
display: grid;
grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
gap: 20px;
margin-top: 20px;
}

.info-card {
background: #f8f9fa;
border: 2px solid #e9ecef;
border-radius: 12px;
padding: 20px;
}

.info-card h4 {
color: #306bc2;
margin-bottom: 15px;
font-size: 1.1rem;
display: flex;
align-items: center;
gap: 8px;
}

.info-details {
color: #666;
font-size: 0.9rem;
line-height: 1.6;
}

.info-details strong {
color: #333;
}

@keyframes modalFadeIn {
from { opacity: 0; transform: scale(0.9); }
to { opacity: 1; transform: scale(1); }
}

@media (max-width: 768px) {
.sidebar {
width: 70px;
}

.menu-item span, .logout-button span {
display: none;
}

.menu-item i, .logout-button i {
margin-right: 0;
}

.info-grid {
grid-template-columns: 1fr;
}

.operations {
flex-direction: column;
gap: 6px;
min-width: auto;
}

.btn-action {
width: 100%;
min-width: 120px;
}

.search-section {
flex-direction: column;
gap: 20px;
align-items: stretch;
}

.search-container {
width: 100%;
}

.stats-info {
text-align: center;
}
}

@media (max-width: 1200px) {
.operations {
flex-wrap: wrap;
gap: 6px;
}

.btn-action {
font-size: 12px;
padding: 8px 10px;
}
}
</style>
</head>
<body>
<div class="sidebar">
<div>
<div class="logo">
<img src="imagem/logo.png" alt="logo">
</div>
<div class="menu">
<div class="menu-item" onclick="navegarPara('inicio')">
<i class="fas fa-home"></i>
<span>INÍCIO</span>
</div>
<div class="menu-item active">
<i class="fas fa-address-card"></i>
<span>CADASTRO</span>
</div>
<div class="menu-item" onclick="navegarPara('matricula')">
<i class="fas fa-user-graduate"></i>
<span>MATRÍCULA</span>
</div>
<div class="menu-item" onclick="navegarPara('professor')">
<i class="fas fa-chalkboard-teacher"></i>
<span>PROFESSOR</span>
</div>
<div class="menu-item" onclick="navegarPara('turma')">
<i class="fas fa-users"></i>
<span>TURMA</span>
</div>
<div class="menu-item" onclick="navegarPara('financeiro')">
<i class="fas fa-dollar-sign"></i>
<span>FINANCEIRO</span>
</div>
</div>
</div>
<div class="seteeduca">
<p>@seteeduca</p>
</div>
<div class="sidebar-footer">
<button class="logout-button" onclick="logout()">
<i class="fas fa-sign-out-alt"></i>
<span>SAIR</span>
</button>
</div>
</div>

<div class="main-content">
<div class="header">
<div class="header-title">
<i class="fas fa-child"></i>
<span>Crianças <b>CADASTRADAS</b></span>
</div>
</div>
<div class="content-area">
<div class="search-section">
<div class="search-container">
<div class="search-icon"><i class="fas fa-search"></i></div>
<input type="text" class="search-input" placeholder="Pesquisar criança...">
</div>
<div class="new-button" onclick="criarNovoCadastro()">
<div class="new-button-circle"></div>
<div class="new-text">Nova Criança</div>
</div>
<div class="stats-info" id="totalCriancas">Total de Crianças: 0</div>
</div>

<div class="table-container">
<table class="table">
<thead class="table-header">
<tr>
<th>Foto</th>
<th>Nome da Criança</th>
<th>Idade</th>
<th>Responsável Principal</th>
<th>Matrícula</th>
<th>Operações</th>
</tr>
</thead>
<tbody id="criancasTableBody"></tbody>
</table>
</div>
</div>
</div>

<div class="modal" id="childDetailsModal">
<div class="modal-content">
<div class="modal-header">
<div class="modal-title">
<i class="fas fa-child"></i>
<span id="modalChildTitle">Detalhes da Criança</span>
</div>
<button class="modal-close" onclick="closeModal()">&times;</button>
</div>
<div class="modal-body">
<div id="childDetailsContainer"></div>
</div>
</div>
</div>

<script>
let criancas = [];

const dadosExemplo = [
{
id: 1,
nome: "Maria Silva Santos",
dataNasc: "15/03/2020",
dataMatricula: "01/02/2024",
responsavelPrincipal: "Ana Silva Santos",
responsavelSecundario: "João Santos",
telefone: "(71) 98765-4321",
endereco: "Rua das Flores, 123 - Salvador/BA",
status: "ativo",
observacoes: "Criança com necessidades alimentares especiais"
},
{
id: 2,
nome: "Pedro Henrique Costa",
dataNasc: "22/07/2019",
dataMatricula: "15/01/2024",
responsavelPrincipal: "Carla Costa",
responsavelSecundario: "",
telefone: "(71) 99876-5432",
endereco: "Av. Principal, 456 - Salvador/BA",
status: "ativo",
observacoes: ""
}
];

function calcularIdade(dataNasc) {
const hoje = new Date();
const nascimento = new Date(dataNasc.split('/').reverse().join('-'));
let idade = hoje.getFullYear() - nascimento.getFullYear();
const mes = hoje.getMonth() - nascimento.getMonth();

if (mes < 0 || (mes === 0 && hoje.getDate() < nascimento.getDate())) {
idade--;
}

if (idade === 0) {
const meses = hoje.getMonth() - nascimento.getMonth() + (12 * (hoje.getFullYear() - nascimento.getFullYear()));
return `${meses} meses`;
}

return `${idade} anos`;
}

function navegarPara(pagina) {
const rotas = {
'inicio': '/home',
'professor': '/cadastro-professor',
'financeiro': '/opcoes-financeiro',
'turma': '/turmas-cadastradas',
'matricula': '/matricula',
'cadastro': '/opcoes-aluno'
};

if (rotas[pagina]) {
window.location.href = rotas[pagina];
} else {
console.warn(`Rota não encontrada para: ${pagina}`);
}
}

function logout() {
if (confirm('Deseja realmente sair do sistema?')) {
window.location.href = '/login';
}
}

function criarNovoCadastro() {
window.location.href = '/novo-cadastro';
}

function carregarDoMemoria() {
if (criancas.length === 0) {
return dadosExemplo.slice();
}
return criancas;
}

function getStatusInfo(status) {
switch (status.toLowerCase()) {
case 'ativo':
return { class: 'status-ativo', text: 'Ativo' };
case 'inativo':
return { class: 'status-inativo', text: 'Inativo' };
default:
return { class: 'status-pendente', text: 'Indefinido' };
}
}

function carregarCriancas() {
criancas = carregarDoMemoria();
const tbody = document.getElementById('criancasTableBody');
const totalCriancas = document.getElementById('totalCriancas');
tbody.innerHTML = '';

if (criancas.length === 0) {
tbody.innerHTML = '<tr><td colspan="6" style="text-align:center; color:#666; padding:40px;">Nenhuma criança cadastrada ainda</td></tr>';
} else {
criancas.forEach((crianca, index) => {
const statusInfo = getStatusInfo(crianca.status);
const idade = calcularIdade(crianca.dataNasc);
const iniciais = crianca.nome.split(' ').map(n => n[0]).join('').substring(0, 2);

tbody.innerHTML += `
<tr>
<td class="avatar-cell">
<div class="student-avatar">${iniciais}</div>
</td>
<td style="font-weight: 600; text-align: left;">${crianca.nome}</td>
<td><strong>${idade}</strong></td>
<td>${crianca.responsavelPrincipal}</td>
<td>
<span class="status-badge ${statusInfo.class}">
${statusInfo.text}
</span>
</td>
<td>
<div class="operations">
<button class="btn-action btn-view" onclick="visualizarCrianca(${index})" title="Ver detalhes">
<i class="fas fa-eye"></i> Ver
</button>
<button class="btn-action btn-edit" onclick="editarCrianca(${index})" title="Editar cadastro">
<i class="fas fa-edit"></i> Editar
</button>
<button class="btn-action btn-delete" onclick="excluirCrianca(${index})" title="Arquivar cadastro">
<i class="fas fa-archive"></i> Arquivar
</button>
</div>
</td>
</tr>`;
});
}
totalCriancas.textContent = `Total de Crianças: ${criancas.length}`;
}

function visualizarCrianca(index) {
const crianca = criancas[index];
const modal = document.getElementById('childDetailsModal');
const modalTitle = document.getElementById('modalChildTitle');
const container = document.getElementById('childDetailsContainer');

modalTitle.textContent = `Detalhes: ${crianca.nome}`;

const idade = calcularIdade(crianca.dataNasc);
const statusInfo = getStatusInfo(crianca.status);

container.innerHTML = `
<div style="text-align: center; margin-bottom: 30px;">
<div class="student-avatar" style="width: 80px; height: 80px; font-size: 28px; margin: 0 auto 15px;">
${crianca.nome.split(' ').map(n => n[0]).join('').substring(0, 2)}
</div>
<h2 style="color: #333; margin-bottom: 10px;">${crianca.nome}</h2>
<span class="status-badge ${statusInfo.class}">${statusInfo.text}</span>
</div>

<div class="info-grid">
<div class="info-card">
<h4><i class="fas fa-child"></i> Informações Pessoais</h4>
<div class="info-details">
<strong>Data de Nascimento:</strong> ${crianca.dataNasc}<br>
<strong>Idade:</strong> ${idade}<br>
<strong>Data de Matrícula:</strong> ${crianca.dataMatricula}
</div>
</div>

<div class="info-card">
<h4><i class="fas fa-users"></i> Responsáveis</h4>
<div class="info-details">
<strong>Principal:</strong> ${crianca.responsavelPrincipal}<br>
${crianca.responsavelSecundario ? `<strong>Secundário:</strong> ${crianca.responsavelSecundario}<br>` : ''}
<strong>Telefone:</strong> ${crianca.telefone}
</div>
</div>

<div class="info-card">
<h4><i class="fas fa-map-marker-alt"></i> Endereço</h4>
<div class="info-details">
${crianca.endereco}
</div>
</div>

${crianca.observacoes ? `
<div class="info-card">
<h4><i class="fas fa-sticky-note"></i> Observações</h4>
<div class="info-details">
${crianca.observacoes}
</div>
</div>
` : ''}
</div>
`;

modal.style.display = 'flex';
}

function closeModal() {
document.getElementById('childDetailsModal').style.display = 'none';
}

function editarCrianca(index) {
if (index >= 0 && index < criancas.length) {
alert(`Funcionalidade de edição será implementada para: ${criancas[index].nome}`);
}
}

function excluirCrianca(index) {
const crianca = criancas[index];

if (confirm(`Tem certeza que deseja arquivar o cadastro de "${crianca.nome}"?`)) {
criancas.splice(index, 1);
carregarCriancas();
alert('Cadastro arquivado com sucesso!');
}
}

function adicionarCrianca(novaCrianca) {
if (!novaCrianca.id) {
novaCrianca.id = Date.now();
}

criancas.push(novaCrianca);
carregarCriancas();
alert('Criança cadastrada com sucesso!');
}

function filtrarPorStatus(status) {
const rows = document.querySelectorAll('#criancasTableBody tr');
let visibleCount = 0;

rows.forEach(row => {
if (row.children.length > 1) {
const statusCell = row.children[4];
const statusText = statusCell.textContent.toLowerCase();
const isVisible = status === 'todos' || statusText.includes(status.toLowerCase());
row.style.display = isVisible ? '' : 'none';
if (isVisible) visibleCount++;
}
});

const totalCriancas = document.getElementById('totalCriancas');
if (status === 'todos') {
totalCriancas.textContent = `Total de Crianças: ${criancas.length}`;
} else {
totalCriancas.textContent = `${status.charAt(0).toUpperCase() + status.slice(1)}: ${visibleCount} de ${criancas.length}`;
}
}

function exportarDados() {
const dataStr = JSON.stringify(criancas, null, 2);
const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);

const exportFileDefaultName = `criancas_cadastradas_${new Date().toISOString().split('T')[0]}.json`;

const linkElement = document.createElement('a');
linkElement.setAttribute('href', dataUri);
linkElement.setAttribute('download', exportFileDefaultName);
linkElement.click();
}

document.addEventListener('DOMContentLoaded', function() {
carregarCriancas();

const searchInput = document.querySelector('.search-input');
searchInput.addEventListener('input', function() {
const searchTerm = this.value.toLowerCase();
const rows = document.querySelectorAll('#criancasTableBody tr');

let visibleCount = 0;
rows.forEach(row => {
if (row.children.length > 1) {
const text = row.textContent.toLowerCase();
const isVisible = text.includes(searchTerm);
row.style.display = isVisible ? '' : 'none';
if (isVisible) visibleCount++;
}
});

const totalCriancas = document.getElementById('totalCriancas');
if (searchTerm) {
totalCriancas.textContent = `Encontradas: ${visibleCount} de ${criancas.length}`;
} else {
totalCriancas.textContent = `Total de Crianças: ${criancas.length}`;
}
});

const modal = document.getElementById('childDetailsModal');
modal.addEventListener('click', function(e) {
if (e.target === this) {
closeModal();
}
});

document.addEventListener('keydown', function(e) {
if (e.key === 'Escape') {
closeModal();
}
});
});

window.adicionarCrianca = adicionarCrianca;
window.navegarPara = navegarPara;
window.logout = logout;
window.criarNovoCadastro = criarNovoCadastro;
window.visualizarCrianca = visualizarCrianca;
window.closeModal = closeModal;
window.editarCrianca = editarCrianca;
window.excluirCrianca = excluirCrianca;
window.filtrarPorStatus = filtrarPorStatus;
window.exportarDados = exportarDados;
</script>
</body>
</html>
