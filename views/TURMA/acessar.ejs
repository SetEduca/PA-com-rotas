<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sete Educa - Acessar TURMAS</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
        body { background-color: #e8e8e8;
; min-height: 100vh; display: flex; }

        .sidebar {
            width: 280px;
            background: linear-gradient(180deg, #FFF4DF 0%, #f8f0e3 100%);
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            box-shadow: 2px 0 15px rgba(0, 0, 0, 0.1);
            min-height: 100vh;
            flex-shrink: 0;
        }

        .logo {
            padding: 0px 40px;
            text-align: center;
            margin-bottom: 25px;
            margin-top: 30px;
        }

        .logo img {
            max-width: 100%;
            height: auto;
        }

        .menu {
            flex: 1;
            padding: 20px 18px;
            overflow-y: auto;
        }

        .menu-item {
            padding: 30px 20px;
            margin-bottom: 6px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            display: flex;
            align-items: center;
            font-weight: 500;
            overflow: visible;
            color: black;
            text-decoration: none;
        }

        .menu-item i {
            margin-right: 15px;
            font-size: 18px;
            width: 24px;
            text-align: center;
            z-index: 2;
        }

        .menu-item span {
            z-index: 2;
            font-size: 15px;
        }

        .menu-item:hover {
            background-color: #6c757d21;
        }

        .menu-item::after {
            padding: 0 10px;
            content: '';
            position: absolute;
            bottom: -3px;
            left: 20px;
            height: 2px;
            width: 0px;
            transition: width 0.3s ease;
            border-radius: 1px;
        }

        .menu-item:hover::after,
        .menu-item.active::after {
            width: calc(100% - 40px);
        }

    .menu-item:nth-child(1)::after { background-color: #F4BF27; }
    .menu-item:nth-child(2)::after { background-color: #00A6FF; }
    .menu-item:nth-child(3)::after { background-color: #9747FF; }
    .menu-item:nth-child(4)::after { background-color: #F88C12; }
    .menu-item:nth-child(5)::after { background-color: #D22A2A; }
    .menu-item:nth-child(6)::after { background-color: #59C631; }

        .menu-item.active {
            background-color: rgba(128, 128, 128, 0.356);
            color: #333;
            font-weight: 600;
        }

        .menu-item.active::before {
            content: '';
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: #333;
            z-index: 2;
        }

        .seteeduca {
            color: #333;
            text-align: center;
            margin-bottom: 10px;
        }

        .sidebar-footer {
            padding: 20px 18px;
            border-top: 1px solid rgba(0, 0, 0, 0.1);
        }
        
        .logout-button {
            padding: 16px 20px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            font-weight: 500;
            color: #333;
            width: 100%;
            border: none;
            background: transparent;
        }

        .logout-button i {
            margin-right: 15px;
            font-size: 18px;
            width: 24px;
            text-align: center;
        }

        .logout-button:hover {
            background-color: rgba(210, 42, 42, 0.1); 
            color: #c01e26; 
            font-weight: 600;
        }

        .main-content { 
            flex: 1; 
            min-height: 100vh; 
            display: flex;
            flex-direction: column;
        }

        .header { 
            background: #c01e26; 
            height: 80px; 
            display: flex; 
            align-items: center; 
            justify-content: space-between; 
            padding: 0 30px; 
            color: white;
            width: 100%;
        }

        .header-title { 
            display: flex; 
            align-items: center; 
            font-size: 24px; 
            font-weight: 600; 
        }

        .header-title i { 
            margin-right: 15px; 
            font-size: 28px; 
        }

        .content-area { 
            padding: 30px; 
            background: #e8e8e8; 
            flex: 1;
            width: 100%;
        }

        .search-section { 
            display: flex; 
            align-items: center; 
            justify-content: space-between; 
            margin-bottom: 30px; 
        }

        .search-container { 
            position: relative; 
            width: 400px; 
        }

        .search-input { 
            width: 100%; 
            height: 50px; 
            background: white; 
            border: 2px solid #ddd; 
            border-radius: 25px; 
            padding: 0 20px 0 50px; 
            font-size: 16px; 
            color: #666; 
            outline: none; 
        }

        .search-input:focus {
            border-color: #c01e26;
            box-shadow: 0 0 0 3px rgba(193, 39, 45, 0.1);
        }

        .search-icon { 
            position: absolute; 
            left: 18px; 
            top: 50%; 
            transform: translateY(-50%); 
            color: #999; 
            font-size: 18px; 
        }

        .new-button { 
            display: flex; 
            flex-direction: column; 
            align-items: center; 
            gap: 8px; 
            cursor: pointer; 
            transition: transform 0.2s ease;
        }

        .new-button:hover {
            transform: translateY(-2px);
        }

        .new-button-circle { 
            width: 45px; 
            height: 45px; 
            background: #c01e26; 
            border-radius: 50%; 
            display: flex; 
            align-items: center; 
            justify-content: center; 
            color: white; 
            font-size: 28px; 
            font-weight: 200; 
            position: relative;
            transition: background-color 0.3s ease;
        }

        .new-button:hover .new-button-circle {
            background: #c01e26;
        }

        .new-button-circle::before { 
            content: '+'; 
            position: absolute; 
            top: 50%; 
            left: 50%; 
            transform: translate(-50%, -50%); 
            font-size: 28px; 
        }

        .new-text { 
            font-size: 14px; 
            color: #666; 
            font-weight: 500; 
            text-align: center; 
        }

        .stats-info { 
            text-align: right; 
            color: #333; 
            font-size: 18px; 
            font-weight: 600; 
        }

        .table-container { 
            background: white; 
            border-radius: 12px; 
            border-top: 5px solid #c01e26; 
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); 
            overflow: hidden; 
        }

        .table { 
            width: 100%; 
            border-collapse: collapse; 
        }

        .table-header { 
            background: #f8f9fa; 
            color: #666; 
            font-weight: 600; 
            font-size: 14px; 
            text-transform: uppercase; 
        }

        .table th, .table td { 
            padding: 20px; 
            text-align: center; 
            border-bottom: 1px solid #eee; 
        }

        .operations { 
            display: flex; 
            justify-content: center; 
            align-items: center;
            gap: 8px; 
            min-width: 200px;
        }

        .btn-action { 
            display: inline-flex; 
            align-items: center; 
            justify-content: center;
            gap: 6px; 
            padding: 10px 14px; 
            border: none; 
            border-radius: 8px; 
            cursor: pointer; 
            font-size: 13px; 
            font-weight: 600; 
            text-decoration: none; 
            transition: all 0.3s ease; 
            white-space: nowrap;
            min-width: 0;
            flex: 0 0 auto;
        }

        .btn-action i {
            font-size: 14px;
        }

        .btn-view-students { 
            background: #e8f5e8; 
            color: #2e7d32;
            border: 2px solid #c8e6c9;
        }

        .btn-view-students:hover { 
            background: #c8e6c9;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(46, 125, 50, 0.2);
        }

        .btn-edit { 
            background: #e3f2fd; 
            color: #1976d2;
            border: 2px solid #bbdefb;
        }

        .btn-edit:hover { 
            background: #bbdefb;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(25, 118, 210, 0.2);
        }

        .btn-archive { 
            background: #fce4ec; 
            color: #c01e26;
            border: 2px solid #f8bbd9;
        }

        .btn-archive:hover { 
            background: #f8bbd9;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(194, 24, 91, 0.2);
        }
        
        .vagas-status {
            display: inline-block;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .vagas-disponivel { 
            background: linear-gradient(135deg, #d4edda, #c3e6cb); 
            color: #155724; 
            border: 1px solid #c3e6cb;
        }
        
        .vagas-poucas { 
            background: linear-gradient(135deg, #fff3cd, #ffeaa7); 
            color: #856404; 
            border: 1px solid #ffeaa7;
        }
        
        .vagas-esgotadas { 
            background: linear-gradient(135deg, #f8d7da, #f5c6cb); 
            color: #721c24; 
            border: 1px solid #f5c6cb;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0,0,0,0.5);
            justify-content: center;
            align-items: center;
            z-index: 9999;
            backdrop-filter: blur(3px);
        }

        .modal-content {
            background: white;
            border-radius: 12px;
            padding: 0;
            max-width: 900px;
            width: 90%;
            max-height: 80vh;
            overflow: hidden;
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
            animation: modalFadeIn 0.3s ease;
        }

        .modal-header {
            background: #c01e26;
            color: white;
            padding: 20px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            font-size: 1.4rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .modal-close {
            background: none;
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            padding: 5px;
            transition: opacity 0.2s ease;
        }

        .modal-close:hover {
            opacity: 0.7;
        }

        .modal-body {
            padding: 30px;
            max-height: 60vh;
            overflow-y: auto;
        }

        .students-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .student-card {
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 20px;
            transition: all 0.3s;
        }

        .student-card:hover {
            border-color: #c01e26;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(193, 39, 45, 0.15);
        }

        .student-info h4 {
            color: #333;
            margin-bottom: 10px;
            font-size: 1.1rem;
        }

        .student-details {
            color: #666;
            font-size: 0.9rem;
            line-height: 1.4;
        }

        .student-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #c01e26, #971d1d);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 18px;
            margin-bottom: 15px;
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #666;
        }

        .empty-state i {
            font-size: 48px;
            color: #ddd;
            margin-bottom: 15px;
        }

        @keyframes modalFadeIn {
            from { opacity: 0; transform: scale(0.9); }
            to { opacity: 1; transform: scale(1); }
        }

        @media (max-width: 768px) {
            .sidebar { 
                width: 70px; 
            }
            
            .menu-item span, .logout-button span { 
                display: none; 
            }
            
            .menu-item i, .logout-button i { 
                margin-right: 0; 
            }
            
            .students-grid { 
                grid-template-columns: 1fr; 
            }
            
            .operations { 
                flex-direction: column;
                gap: 6px;
                min-width: auto;
            }
            
            .btn-action { 
                width: 100%; 
                min-width: 120px;
            }

            .search-section {
                flex-direction: column;
                gap: 20px;
                align-items: stretch;
            }

            .search-container {
                width: 100%;
            }

            .stats-info {
                text-align: center;
            }
        }

        @media (max-width: 1200px) {
            .operations {
                flex-wrap: wrap;
                gap: 6px;
            }
            
            .btn-action {
                font-size: 12px;
                padding: 8px 10px;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div>
            <div class="logo">
                <img src="imagem/logo.png" alt="logo">
            </div>
            <div class="menu">
                <div class="menu-item" onclick="navegarPara('inicio')">
                    <i class="fas fa-home"></i>
                    <span>INÍCIO</span>
                </div>
                <div class="menu-item" onclick="navegarPara('cadastro')">
                    <i class="fas fa-address-card"></i>
                    <span>CADASTRO</span>
                </div>
                <div class="menu-item" onclick="navegarPara('matricula')">
                    <i class="fas fa-user-graduate"></i>
                    <span>MATRÍCULA</span>
                </div>
                <div class="menu-item" onclick="navegarPara('professor')">
                    <i class="fas fa-chalkboard-teacher"></i>
                    <span>PROFESSOR</span>
                </div>
                <div class="menu-item active" > 
                    <i class="fas fa-users"></i>
                    <span>TURMA</span>
                </div>
                <div class="menu-item" onclick="navegarPara('financeiro')">
                     <i class="fas fa-dollar-sign"></i>
                    <span>FINANCEIRO</span>
                </div>
            </div>
        </div>
        <div class="seteeduca">
                <p> @seteeduca </p>
            </div>

        <div class="sidebar-footer">
            <button class="logout-button" onclick="logout()">
                <i class="fas fa-sign-out-alt"></i>
                <span>SAIR</span>
            </button>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="header">
            <div class="header-title"><i class="fas fa-users"></i> Acessar TURMAS</div>
        </div>
        <div class="content-area">
            <div class="search-section">
                <div class="search-container">
                    <div class="search-icon"><i class="fas fa-search"></i></div>
                    <input type="text" class="search-input" placeholder="pesquisar">
                </div>
                <div class="new-button" onclick="criarNovaTurma()">
                    <div class="new-button-circle"></div>
                    <div class="new-text">Nova turma</div>
                </div>
                <div class="stats-info" id="totalTurmas">Total de Turmas: 0</div>
            </div>

            <div class="table-container">
                <table class="table">
                    <thead class="table-header">
                        <tr>
                            <th>Nome da Turma</th>
                            <th>Professor(a)</th>
                            <th>Mensalidade</th>
                            <th>Vagas</th>
                            <th>Alunos</th>
                            <th>Ano letivo</th>
                            <th>Operações</th>
                        </tr>
                    </thead>
                    <tbody id="turmasTableBody"></tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Modal para visualizar alunos -->
    <div class="modal" id="studentsModal">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">
                    <i class="fas fa-graduation-cap"></i>
                    <span id="modalTurmaTitle">Alunos da Turma</span>
                </div>
                <button class="modal-close" onclick="closeModal()">&times;</button>
            </div>
            <div class="modal-body">
                <div id="studentsContainer"></div>
            </div>
        </div>
    </div>

    <script>
        // Dados globais
        let turmas = [];
        let matriculas = [];

        // Dados de alunos disponíveis
        const alunosDisponiveis = [];

        // Função para navegação entre páginas
        function navegarPara(pagina) {
            const rotas = {
                'inicio': '/home',
                'professor': '/cadastro-professor',
                'financeiro': '/opcoes-financeiro',
                'turmas': '/turmas-cadastradas',
                'matricula': '/matricula',
                'cadastro': '/opcoes-aluno'
            };

            if (rotas[pagina]) {
                window.location.href = rotas[pagina];
            } else {
                console.warn(`Rota não encontrada para: ${pagina}`);
            }
        }

        function logout() {
            if (confirm('Deseja realmente sair do sistema?')) {
                // Limpar dados da sessão se necessário
                sessionStorage.clear();
                // Redirecionar para página de login
                window.location.href = '/login';
            }
        }

        function criarNovaTurma() {
            window.location.href = '/cadastro-turma';
        }

        // Função para carregar dados do storage
        function carregarDoStorage() {
            // Carregar turmas do localStorage/sessionStorage
            const turmasSalvas = localStorage.getItem('turmas') || sessionStorage.getItem('turmas');
            if (turmasSalvas) {
                turmas = JSON.parse(turmasSalvas);
            }

            // Carregar matrículas do localStorage/sessionStorage
            const matriculasSalvas = localStorage.getItem('matriculas') || sessionStorage.getItem('matriculas');
            if (matriculasSalvas) {
                matriculas = JSON.parse(matriculasSalvas);
            }
        }

        // Função para salvar no storage
        function salvarNoStorage() {
            sessionStorage.setItem('turmas', JSON.stringify(turmas));
            sessionStorage.setItem('matriculas', JSON.stringify(matriculas));
        }

        function contarAlunosNaTurma(nomeTurma) {
            return matriculas.filter(matricula => matricula.turma === nomeTurma).length;
        }

        function calcularVagasDisponiveis(turma) {
            const capacidadeMaxima = parseInt(turma.quantidade);
            const alunosMatriculados = contarAlunosNaTurma(turma.turma);
            return capacidadeMaxima - alunosMatriculados;
        }

        function getVagasStatus(vagasDisponiveis) {
            if (vagasDisponiveis === 0) return { class: 'vagas-esgotadas', text: 'Esgotadas' };
            if (vagasDisponiveis <= 2) return { class: 'vagas-poucas', text: `${vagasDisponiveis} restantes` };
            return { class: 'vagas-disponivel', text: `${vagasDisponiveis} disponíveis` };
        }

        function carregarTurmas() {
            carregarDoStorage();
            const tbody = document.getElementById('turmasTableBody');
            const totalTurmas = document.getElementById('totalTurmas');
            tbody.innerHTML = '';

            if (turmas.length === 0) {
                tbody.innerHTML = '<tr><td colspan="7" style="text-align:center; color:#666; padding:40px;">Nenhuma turma cadastrada ainda</td></tr>';
            } else {
                turmas.forEach((turma, index) => {
                    const alunosMatriculados = contarAlunosNaTurma(turma.turma);
                    const vagasDisponiveis = calcularVagasDisponiveis(turma);
                    const vagasStatus = getVagasStatus(vagasDisponiveis);

                    tbody.innerHTML += `
                        <tr>
                            <td style="font-weight: 600;">${turma.turma}</td>
                            <td>${turma.professor}</td>
                            <td>${turma.mensalidade}</td>
                            <td>
                                <span class="vagas-status ${vagasStatus.class}">
                                    ${vagasStatus.text}
                                </span>
                            </td>
                            <td><strong>${alunosMatriculados}/${turma.quantidade}</strong></td>
                            <td>${new Date().getFullYear()}</td>
                            <td>
                                <div class="operations">
                                    <button class="btn-action btn-view-students" onclick="visualizarAlunos('${turma.turma}', ${index})" title="Ver alunos matriculados">
                                        <i class="fas fa-eye"></i> Ver
                                    </button>
                                    <button class="btn-action btn-edit" onclick="editarTurma(${index})" title="Editar turma">
                                        <i class="fas fa-edit"></i> Editar
                                    </button>
                                    <button class="btn-action btn-archive" onclick="arquivarTurma(${index})" title="Arquivar turma">
                                        <i class="fas fa-archive"></i> Arquivar
                                    </button>
                                </div>
                            </td>
                        </tr>`;
                });
            }
            totalTurmas.textContent = `Total de Turmas: ${turmas.length}`;
        }

        function visualizarAlunos(nomeTurma, turmaIndex) {
            const modal = document.getElementById('studentsModal');
            const modalTitle = document.getElementById('modalTurmaTitle');
            const container = document.getElementById('studentsContainer');
            
            modalTitle.textContent = `Alunos da Turma: ${nomeTurma}`;
            
            // Buscar alunos matriculados nesta turma
            const alunosMatriculados = matriculas
                .filter(matricula => matricula.turma === nomeTurma)
                .map(matricula => {
                    const aluno = alunosDisponiveis.find(a => a.id === matricula.alunoId);
                    return aluno ? { ...aluno, matricula } : null;
                })
                .filter(aluno => aluno !== null);
            
            if (alunosMatriculados.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-graduation-cap"></i>
                        <h3>Nenhum aluno matriculado</h3>
                        <p>Esta turma ainda não possui alunos matriculados.</p>
                    </div>
                `;
            } else {
                container.innerHTML = `
                    <div style="margin-bottom: 20px; text-align: center;">
                        <h4 style="color: #333;">Total de alunos matriculados: ${alunosMatriculados.length}</h4>
                    </div>
                    <div class="students-grid">
                        ${alunosMatriculados.map(aluno => `
                            <div class="student-card">
                                <div class="student-avatar">
                                    ${aluno.nome.split(' ').map(n => n[0]).join('').substring(0, 2)}
                                </div>
                                <div class="student-info">
                                    <h4>${aluno.nome}</h4>
                                    <div class="student-details">
                                        <strong>Data Nasc:</strong> ${aluno.dataNasc}<br>
                                        <strong>Responsáveis:</strong> ${aluno.responsaveis.join(', ')}<br>
                                        <strong>Matrícula:</strong> ${aluno.matricula.numeroMatricula}<br>
                                        <strong>Data Matrícula:</strong> ${aluno.matricula.dataMatricula}
                                    </div>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                `;
            }
            
            modal.style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('studentsModal').style.display = 'none';
        }

        function editarTurma(index) {
            const turma = turmas[index];
            sessionStorage.setItem('turmaParaEditar', JSON.stringify({ index, dados: turma }));
            window.location.href = '/editar-turmas';
        }

        function arquivarTurma(index) {
            const turma = turmas[index];
            const alunosMatriculados = contarAlunosNaTurma(turma.turma);
            
            if (alunosMatriculados > 0) {
                alert(`Não é possível arquivar esta turma pois há ${alunosMatriculados} aluno(s) matriculado(s). Transfira os alunos antes de arquivar.`);
                return;
            }
            
            if (confirm(`Tem certeza que deseja arquivar a turma "${turma.turma}"?`)) {
                turmas.splice(index, 1);
                salvarNoStorage();
                carregarTurmas();
            }
        }

        // Event Listeners
        document.addEventListener('DOMContentLoaded', function() {
            carregarTurmas();
            
            // Verificar se há turma editada retornando
            const turmaEditada = localStorage.getItem('turmaEditada');
            if (turmaEditada) {
                const { index, dados } = JSON.parse(turmaEditada);
                if (index >= 0 && index < turmas.length) {
                    turmas[index] = dados;
                    salvarNoStorage();
                    carregarTurmas();
                }
                localStorage.removeItem('turmaEditada');
            }

            // Verificar se há nova turma cadastrada
            const turmaCadastrada = localStorage.getItem('novaTurma');
            if (turmaCadastrada) {
                const turma = JSON.parse(turmaCadastrada);
                adicionarTurma(turma);
                localStorage.removeItem('novaTurma');
            }
            
            // Pesquisa em tempo real
            const searchInput = document.querySelector('.search-input');
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                const rows = document.querySelectorAll('#turmasTableBody tr');
                
                rows.forEach(row => {
                    if (row.children.length > 1) { // Ignora a linha de "nenhuma turma"
                        const text = row.textContent.toLowerCase();
                        row.style.display = text.includes(searchTerm) ? '' : 'none';
                    }
                });
            });
            
            // Fechar modal clicando fora
            const modal = document.getElementById('studentsModal');
            modal.addEventListener('click', function(e) {
                if (e.target === this) {
                    closeModal();
                }
            });
            
            // Fechar modal com ESC
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    closeModal();
                }
            });
        });

        // Funções para adicionar dados (para integração futura)
        function adicionarTurma(novaTurma) {
            turmas.push(novaTurma);
            salvarNoStorage();
            carregarTurmas();
        }

        function adicionarMatricula(novaMatricula) {
            matriculas.push(novaMatricula);
            salvarNoStorage();
            carregarTurmas();
        }

        // Expor funções globalmente para uso em outros scripts
        window.adicionarTurma = adicionarTurma;
        window.adicionarMatricula = adicionarMatricula;
        window.navegarPara = navegarPara;
        window.logout = logout;
        window.criarNovaTurma = criarNovaTurma;
        window.visualizarAlunos = visualizarAlunos;
        window.closeModal = closeModal;
        window.editarTurma = editarTurma;
        window.arquivarTurma = arquivarTurma;
    </script>
</body>
</html>